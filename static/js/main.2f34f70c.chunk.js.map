{"version":3,"sources":["components/Main.js","components/Favorite.js","components/Header.js","components/Add.js","App.js","serviceWorker.js","index.js"],"names":["Main","props","state","city","onSubmit","this","get","type","placeholder","id","name","className","description","degree","days","map","e","i","moment","Date","format","Temperature","Maximum","Value","Unit","Minimum","to","onClick","add","favoriteCity","Component","Favorite","index","del","Header","Add","day1","style","position","left","top","key","App","iD","addFavoriteCity","setState","length","alert","delFav","filter","element","getWeather","a","replacment","target","elements","value","preventDefault","fetch","api_cal","json","data","forEach","Key","LocalizedName","name2","api_cal1","data1","WeatherText","Metric","api_cal2","data2","DailyForecasts","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2f34f70c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Main.css'\r\nimport moment from 'moment'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             city:props.city,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <form onSubmit={this.props.get}>\r\n                <input type='text' placeholder='🔍Enter your city' id='search' name='replacment' />\r\n                <div className='div1'>\r\n                <p id='description'>{this.props.description}</p>\r\n                <p id='name'>{this.props.name}</p>\r\n                <p id='degree'>{this.props.degree}</p>\r\n                <hr></hr>\r\n                {this.props.days.map((e,i)=>{\r\n                    return (\r\n                    <div className='div2'>\r\n                        <br></br>\r\n                        <p>{moment(e.Date).format('dddd')}</p>\r\n                        <p>{moment(e.Date).format('Do MMM YY')}</p>\r\n                        <hr></hr>\r\n                        <p> Maxtemp : {e.Temperature.Maximum.Value}&deg;{e.Temperature.Maximum.Unit}</p>\r\n                        <hr></hr>\r\n                        <p> Mintemp : {e.Temperature.Minimum.Value}&deg;{e.Temperature.Maximum.Unit}</p>\r\n                    </div>\r\n                    )\r\n                })}\r\n                </div>\r\n            </form>\r\n            <Link to='/Favorite'> <button onClick={()=>{this.props.add(this.props.favoriteCity.name,this.props.favoriteCity.description,this.props.favoriteCity)}} type='button' className='btn btn-info' id='addbutton'> Add to Favorites </button> </Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Favorite.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Favorite extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    // showing your favorite city in button , you can click and see the weather condition\r\n    render() {\r\n        return (\r\n            <div>\r\n               {this.props.favoriteCity.map((e,index)=>{\r\n                return(\r\n                <div className='div3'>\r\n                    <Link to={`/Add/${e.name}`}><button className='btn btn-info' id='button'>\r\n                        {e.name} \r\n                        <hr></hr>\r\n                        {e.degree} \r\n                        <hr></hr>\r\n                        {e.description}\r\n                    </button>\r\n                    </Link>\r\n                    <button type='button' className='btn btn-danger' id='removebutton' onClick={()=>{this.props.del(index)}}>Remove from Favorites</button>\r\n                </div>\r\n                )\r\n            })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Header.css'\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n        <div className = 'row'>\r\n            <div className='div'>\r\n                <div className='col-4'>\r\n                    <Link to='/'>\r\n                    <button type='button' className='btn btn-warning' id='Button'>Home</button>\r\n                    </Link>\r\n                </div>\r\n                <div className='col-4'>\r\n                    <Link to='/Favorite'>\r\n                    <button type='button' className='btn btn-success' id='Buttons' >Favorite</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Add extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n    }\r\n    \r\n    // showing the weather condition of your favorite city\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div className='div1'>\r\n                <p id='description'>{this.props.description}</p>\r\n                <p id='name'>{this.props.name}</p>\r\n                <p id='degree'>{this.props.degree}</p>\r\n                <hr></hr>\r\n                {this.props.day1.map((e,i)=>{\r\n                    return (\r\n                    <div className='div2'>\r\n                        <br></br>\r\n                        <p>{moment(e.Date).format('dddd')}</p>\r\n                        <p>{moment(e.Date).format('Do MMM YY')}</p>\r\n                        <hr></hr>\r\n                        <p> Maxtemp : {e.Temperature.Maximum.Value}&deg;{e.Temperature.Maximum.Unit}</p>\r\n                        <hr></hr>\r\n                        <p> Mintemp : {e.Temperature.Minimum.Value}&deg;{e.Temperature.Maximum.Unit}</p>\r\n                    </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <Link to = '/Favorite'> <button className='btn btn-danger' style={{position:'relative',left:'1250px',top:'150px'}}> X </button></Link>    \r\n        </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport './App.css'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Main from './components/Main'\nimport Favorite from './components/Favorite'\nimport Header from './components/Header'\nimport Add from './components/Add'\nconst key = 'F1Lu0iO0zV6MWeCCVXCVKFgBeU707ofo' // My Api Key\n\nexport default class App extends Component {\n\n  state = {\n    city:[],\n    iD:'215854',\n    name:'Tel aviv',\n    degree:'26.5C',\n    description:'Some clouds',\n    days:[{Date : '2020-07-05T07:00:00+03:00',Temperature:{Maximum : {Value : '30.8' , Unit : 'C'},Minimum : {Value : '26.1' , Unit : 'C'}}},\n          {Date : '2020-07-06T07:00:00+03:00',Temperature:{Maximum : {Value : '30.2' , Unit : 'C'},Minimum : {Value : '24.5' , Unit : 'C'}}},\n          {Date : '2020-07-07T07:00:00+03:00',Temperature:{Maximum : {Value : '30.5' , Unit : 'C'},Minimum : {Value : '23.5' , Unit : 'C'}}},\n          {Date : '2020-07-08T07:00:00+03:00',Temperature:{Maximum : {Value : '31.1' , Unit : 'C'},Minimum : {Value : '24.8' , Unit : 'C'}}},\n          {Date : '2020-07-09T07:00:00+03:00',Temperature:{Maximum : {Value : '29.6' , Unit : 'C'},Minimum : {Value : '24.1' , Unit : 'C'}}}],\n    favoriteCity : [] ,\n  }\n\n  // Add Favorite City to new array\n  addFavoriteCity=()=>{\n    this.setState({\n      favoriteCity:[...this.state.favoriteCity,{iD:this.state.iD,name:this.state.name,description:this.state.description,degree:this.state.degree,day1:this.state.days}]\n    })\n    for(let i =0 ; i<this.state.favoriteCity.length;i++){\n      if(this.state.name === this.state.favoriteCity[i].name){\n        alert('Your city is in favorite') \n        this.setState({favoriteCity:[...this.state.favoriteCity]})\n      }      \n    }\n  }\n\n  // Delete City from Favorites\n  del=(i)=>{\n    const delFav = this.state.favoriteCity.filter((element,index)=>(index!==i))\n    this.setState({favoriteCity:[...delFav]})\n  }\n\n  // Get detailes of the city that you want to know her weather\n  getWeather = async (e) =>{\n    const replacment = e.target.elements.replacment.value;\n    if((replacment)&&(((replacment>='a')&&(replacment<='z'))||((replacment>='A')&&(replacment<='Z')))){\n    e.preventDefault();\n    const api_cal = await fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${key}&q=${replacment}&language=en-us`);\n    const data = await api_cal.json();    \n    this.setState({city:data});\n    this.state.city.forEach(element => {\n      this.setState({\n          iD:element.Key,name:element.LocalizedName,name2:element.LocalizedName\n      })\n    });\n    \n    // Get Current weather of the city you want\n    const api_cal1 = await fetch(`http://dataservice.accuweather.com/currentconditions/v1/${this.state.iD}?apikey=${key}&language=en-us`);\n    const data1 = await api_cal1.json(); \n    this.setState({\n      description:data1[0].WeatherText,\n      degree:data1[0].Temperature.Metric.Value + data1[0].Temperature.Metric.Unit\n    })  \n        \n    // Get the weather condition for the next 5 days\n    const api_cal2 = await fetch(` http://dataservice.accuweather.com/forecasts/v1/daily/5day/${this.state.iD}?apikey=${key}&language=en-us&metric=true`);\n    const data2 = await api_cal2.json(); \n    this.setState({\n      days:[...data2.DailyForecasts]\n    })\n      this.setState({city:[...data,data1,data2]});\n    }else{\n      alert('Pelase Enter Name in English letters only')\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n          <Router>\n            <p id='title'>Weather App Task</p>  \n            <Header/>\n            <Switch>\n              <Route exact path = '/' component = {()=>{return <Main add={this.addFavoriteCity} get={this.getWeather} favoriteCity={this.state.favoriteCity} days={this.state.days} name={this.state.name} description={this.state.description} degree={this.state.degree} />}}/>\n              <Route exact path='/Favorite' component = {()=>{return <Favorite del={this.del} favoriteCity={this.state.favoriteCity} />}}/>\n              {this.state.favoriteCity.map((e,i)=>{\n              return(\n                <Route exact path = {`/Add/${e.name}`} component = {()=>{return <Add name={e.name} degree={e.degree} description={e.description} day1={e.day1} index={i} />}}/>\n              )\n            })}\n            </Switch>\n          </Router>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}